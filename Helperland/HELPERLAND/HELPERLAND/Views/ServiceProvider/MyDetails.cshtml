@using HELPERLAND.Models.ViewModels.ServiceProvider
@model MyDetailsViewModel

<h3 id="account-status">Account Status: @if (Model.IsActive)
{<span class="account-active">Active</span>}
else
{<span class="account-inactive">Inactive</span>}<img id="mainProfileImg" src=@Model.UserProfilePicture /></h3>

<form id="myDetailsForm" data-ajax="true" data-ajax-url="/serviceprovider/mydetails" data-ajax-method="post" data-ajax-update="#mydetails" data-ajax-success="myDetailsEvents()">
    @Html.HiddenFor(model => model.UserProfilePicture, new { id = "mainProfileImgValue" })
    @Html.HiddenFor(model => model.IsActive)
    @Html.HiddenFor(model => model.AddressId)

    <h3 class="form-section-title">Basic Details</h3>

    <div class="row mt-4">
        <div class="col-sm-4 mb-3">
            @Html.LabelFor(model => model.FirstName, new { @class = "form-label" })
            @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
        <div class="col-sm-4 mb-3">
            @Html.LabelFor(model => model.LastName, new { @class = "form-label" })
            @Html.TextBoxFor(model => model.LastName, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
        <div class="col-sm-4 mb-3">
            @Html.LabelFor(model => model.Email, new { @class = "form-label" })
            @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @type = "email", @readonly = "readonly" })
        </div>
    </div>
    <div class="row">
        <div class="col-sm-4 mb-3">
            @Html.LabelFor(model => model.Mobile, new { @class = "form-label" })
            <div class="input-group me-2">
                <div class="input-group-text">+91</div>
                @Html.TextBoxFor(model => model.Mobile, new { @class = "form-control" })
            </div>
            @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
        </div>
        <div class="col-sm-4">
            <label class="form-label">Date Of Birth</label>
            <div class="row">
                <div class="col-auto mb-3">
                    @Html.DropDownListFor(model => model.BirthDay, new List<SelectListItem>
                        { new SelectListItem{Text="1", Value="1"},
                        new SelectListItem{Text="2", Value="2"},
                        new SelectListItem{Text="3",Value="3"},
                    })
                </div>
                <div class="col-auto mb-3">
                    @Html.DropDownListFor(model => model.BirthMonth, new List<SelectListItem>
                        { new SelectListItem{Text="January", Value="January"},
                        new SelectListItem{Text="abruary", Value="Fabruary"},
                        new SelectListItem{Text="March",Value="March"},
                    })
                </div>
                <div class="col-auto mb-3">
                    @Html.DropDownListFor(model => model.BirthYear, new List<SelectListItem>
                        { new SelectListItem{Text="2001", Value="2001"},
                        new SelectListItem{Text="2002", Value="2002"},
                        new SelectListItem{Text="2003",Value="2003"},
                    })
                </div>
            </div>
        </div>
        <div class="col-sm-4 mb-3">
            @Html.LabelFor(model => model.Nationality, new { @class = "form-label" })<br />
            @Html.DropDownListFor(model => model.Nationality, new List<SelectListItem>
                { new SelectListItem{Text="India", Value="1"},
                new SelectListItem{Text="UK", Value="2"},
                new SelectListItem{Text="US",Value="3"},
            })
        </div>
    </div>
    <div class="row">
        <div class="col-sm-6 mb-3">
            @Html.LabelFor(model => model.Gender, new { @class = "form-label" })
            <div class="d-flex">
                <div class="form-check">
                    @* 1=male 2=female 3=other *@
                    @Html.RadioButtonFor(model => model.Gender, 1, new { @class = "form-check-input" })
                    @Html.Label("Gender", "Male", new { @class = "form-check-label" })
                </div>
                <div class="form-check ms-2">
                    @Html.RadioButtonFor(model => model.Gender, 2, new { @class = "form-check-input" })
                    @Html.Label("Gender", "Female", new { @class = "form-check-label" })
                </div>
                <div class="form-check ms-2">
                    @Html.RadioButtonFor(model => model.Gender,3, new { @class = "form-check-input" })
                    @Html.Label("Gender", "Rather not to say", new { @class = "form-check-label" })
                </div>
            </div>
        </div>
    </div>
    <div>
        <label class="form-label">Select Avtar</label>
        <div class="d-flex flex-wrap mb-4">
            <img src="~/imgs/avatar-car.png" class="avtar-list" />
            <img src="~/imgs/avatar-female.png" class="ms-2 avtar-list" />
            <img src="~/imgs/avatar-hat.png" class="ms-2 avtar-list" />
            <img src="~/imgs/avatar-iron.png" class="ms-2 avtar-list" />
            <img src="~/imgs/avatar-male.png" class="ms-2 avtar-list" />
            <img src="~/imgs/avatar-ship.png" class="ms-2 avtar-list" />
        </div>
    </div>
    <h3 class="form-section-title">My address</h3>
    <div class="row">
        <div class="col-sm-4 mb-3">
            @Html.LabelFor(model => model.StreetName, new { @class = "form-label" })
            @Html.TextBoxFor(model => model.StreetName, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.StreetName, "", new { @class = "text-danger" })
        </div>
        <div class="col-sm-4 mb-3">
            @Html.LabelFor(model => model.HouseNumber, new { @class = "form-label" })
            @Html.TextBoxFor(model => model.HouseNumber, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.HouseNumber, "", new { @class = "text-danger" })
        </div>
        <div class="col-sm-4 mb-3">
            @Html.LabelFor(model => model.PostalCode, new { @class = "form-label" })
            @Html.TextBoxFor(model => model.PostalCode, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row">
        <div class="col-sm-4 mb-3">
            @Html.LabelFor(model => model.City, new { @class = "form-label" })
            @Html.TextBoxFor(model => model.City, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
        </div>
    </div>
    <input class="btn btn-primary savebtn px-3 mb-3" type="submit" value="Save" />
    @Html.Raw(@ViewBag.Alert)
</form>
<script src="~/lib/jquery.validate.js"></script>
<script src="~/lib/jquery.validate.unobtrusive.js"></script>